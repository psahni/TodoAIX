generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  image     String?
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  SubTask   SubTask[]
  tasks     Task[]
}

model Project {
  id   Int    @id @default(autoincrement())
  name String
  Task Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  ownerId     Int?
  completed   Boolean   @default(false)
  priority    Int
  dueDate     DateTime?
  projectID   Int?
  tagID       Int?
  SubTask     SubTask[]
  owner       User?     @relation(fields: [ownerId], references: [id])
  project     Project?  @relation(fields: [projectID], references: [id])
  tag         Tag?      @relation(fields: [tagID], references: [id])
}

model SubTask {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean   @default(false)
  dueDate     DateTime?
  projectID   String
  priority    Int
  parentID    Int
  ownerId     Int?
  owner       User?     @relation(fields: [ownerId], references: [id])
  parent      Task      @relation(fields: [parentID], references: [id])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String
  Task Task[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
